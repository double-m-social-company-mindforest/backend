"""update_sender_type_enum_character_to_counselor

Revision ID: 34a589d805b1
Revises: 57da5844e42e
Create Date: 2025-06-30 19:27:55.888697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '34a589d805b1'
down_revision: Union[str, None] = '57da5844e42e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip the column type changes for now due to existing data length constraints
    # op.alter_column('final_types', 'image_filename',
    #            existing_type=sa.TEXT(),
    #            type_=sa.String(length=255),
    #            existing_nullable=True)
    # op.alter_column('final_types', 'image_filename_right',
    #            existing_type=sa.TEXT(),
    #            type_=sa.String(length=255),
    #            existing_nullable=True)
    
    # Update SenderType enum: change 'character' to 'counselor'
    op.execute("ALTER TYPE sendertype RENAME VALUE 'character' TO 'counselor'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert SenderType enum: change 'counselor' back to 'character'
    op.execute("ALTER TYPE sendertype RENAME VALUE 'counselor' TO 'character'")
    
    # Skip the column type changes for now
    # op.alter_column('final_types', 'image_filename_right',
    #            existing_type=sa.String(length=255),
    #            type_=sa.TEXT(),
    #            existing_nullable=True)
    # op.alter_column('final_types', 'image_filename',
    #            existing_type=sa.String(length=255),
    #            type_=sa.TEXT(),
    #            existing_nullable=True)
    # ### end Alembic commands ###
